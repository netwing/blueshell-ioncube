<?xml version="1.0" encoding="UTF-8"?>
<book title="MovieClip Tweening Prototypes" directory="Help">
<page href="alphaTo.html" title="MovieClip.alphaTo()" text="MovieClip.alphaTo() , TextField.alphaTo() Availability Flash Player 6. Usage my_mc.alphaTo(alpha, seconds, animtype, delay, callback, extra1, extra2) Parameters alpha &#32;end value of movieclip _alpha property all other parameters work as in tween() method Returns None Description shortcut method; tweens _alpha. Following commands are identical: my_mc.alphaTo(20,1); my_mc.tween(&quot;_alpha&quot;,20,1);" />
<page href="brightnessTo.html" title="MovieClip.brightnessTo()" text="MovieClip.brightnessTo() , TextField.brightnessTo() Availability Flash Player 6. Usage my_mc.brightnessTo(brightness, seconds, animtype, delay, callback, extra1, extra2) Parameters brightness A number between -100 (black) and 100 (white) that represents brightness of movieclip or textfield all other parameters do the same as in tween() method Returns Nothing. Description Following example changes brightness of my_mc to 80 in 3 seconds with quadratic easing my_mc.brightnessTo(80,3,&quot;easeOutQuad&quot;);" />
<page href="brightOffsetTo.html" title="MovieClip.brightOffsetTo()" text="MovieClip.brightOffsetTo(), TextField.brightOffsetTo() Availability Flash Player 6. Usage my_mc.brightOffsetTo(percent, seconds, animtype, delay, callback, extra1, extra2) Parameters percent A number that represents the brightOffset of movieclip or textfield 0 : normal 100 : to white -100 : to black all other parameters do the same as in tween() method Returns Nothing. Description Following example changes tint of my_mc to brightOffset 100 in 2 seconds my_mc.brightOffsetTo(100,2,&quot;easeOutSine&quot;);" />
<page href="colorTo.html" title="MovieClip.colorTo()" text="MovieClip.colorTo() Availability Flash Player 6. Usage my_mc.colorTo(color, seconds, animtype, delay, callback, extra1, extra2) Parameters color A number that represents the RGB numeric value for the color (tint), may be too null or undefined - it resets color mode to normal without any color transformation all other parameters do the same as in tween() method Returns Nothing. Description Following example changes tint of my_mc to red (0xFF0000) in 2.5 seconds with easeOutSine effect my_mc.colorTo(0xFF0000,2.5,&quot;easeOutSine&quot;);" />
<page href="colorTransformTo.html" title="MovieClip.colorTransformTo()" text="MovieClip.colorTransformTo() , TextField.colorTransformTo() Availability Flash Player 6. Usage my_mc.colorTransformTo(ra, rb, ga, gb, ba, bb, aa, ab, seconds, animtype, delay, callback, extra1, extra2) Parameters ra, rb, ga, gb, ba, bb, aa, ab - use like Color.setTransform. all values are optional. all other parameters do the same as in tween() method Returns Nothing." />
<page href="contrastTo.html" title="MovieClip.contrastTo()" text="MovieClip.contrastTo() , TextField.contrastTo() Availability Flash Player 6. Usage my_mc.contrastTo(percent, seconds, animtype, delay, callback, extra1, extra2) Parameters percent A number that represents the contrast value for the movieclip or textfield 0 : no contrast 100 : normal 100 and more : high contrast -100 : invert colors all other parameters do the same as in tween() method Returns Nothing. Description Change contrast of my_mc to 200 in 2 seconds with easeOutSine effect my_mc.contrastTo(200,2,&quot;easeOutSine&quot;); Change contrast of my_mc to -100 (invert colors) in 1 second my_mc.contrastTo(-100,1,&quot;easeOutSine&quot;);" />
<page href="customEasing.html" title="tweenManager class" text="Custom Easing Tool for developers: example1: tweening movieclip properties with custom easing 1. adjust your easing in Custom Easing Tool (window&gt;other panels&gt; custom easing tool) 2. click generate easing object 3. copy and paste generated code to first frame actions in first frame: #include &quot;lmc_tween.as&quot; // include tweening engine // pasted generated code customEasing = {}; customEasing.pts = [{Mx:0,My:0,Nx:62,Ny:-194,Px:3,Py:97},{Mx:65,My:-97,Nx:58,Ny:-6,Px:-24,Py:60},{Mx:99,My:-43,Nx:76,Ny:-276,Px:25,Py:119},{Mx:200, My:-200}]; customEasing.ease = function(t,b,c,d,pl){ var i,r; r = 200 * t/d; for(i = 0;r&gt;pl[i+1].Mx;i++){ } i=pl[i]; if(i.Px != 0){ r=(-i.Nx+Math.sqrt(i.Nx*i.Nx-4*i.Px*(i.Mx-r)))/(2*i.Px); }else{ r=-(i.Mx-r)/i.Nx; } return b-c*((i.My+i.Ny*r+i.Py*r*r)/200); } // end of generated code // usage: // tween my_mc _x to 300 with custom easing in 3 seconds my_mc.tween(&quot;_x&quot;,300,3,customEasing) example2: customizing easing in V2 components (ComboBox, Tree, Accordion) 1. drag and drop to stage ComboBox component 2. set its name to &quot;my_cb&quot; and add some values in labels property 3. adjust your easing in Custom Easing Tool (window&gt;other panels&gt; custom easing tool) 4. click generate easing object 5. copy and paste generated code to first frame 6. assign pl (point list) parameter in customEasing.ease function actions in first frame: // generated code: customEasing = {}; customEasing.pts = [{Mx:0,My:0,Nx:62,Ny:-194,Px:3,Py:97},{Mx:65,My:-97,Nx:58,Ny:-6,Px:-24,Py:60},{Mx:99,My:-43,Nx:76,Ny:-276,Px:25,Py:119},{Mx:200, My:-200}]; customEasing.ease = function(t,b,c,d){ // manually add this line var pl = customEasing.pts; var i,r; r = 200 * t/d; for(i = 0;r&gt;pl[i+1].Mx;i++){ } i=pl[i]; if(i.Px != 0){ r=(-i.Nx+Math.sqrt(i.Nx*i.Nx-4*i.Px*(i.Mx-r)))/(2*i.Px); }else{ r=-(i.Mx-r)/i.Nx; } return b-c*((i.My+i.Ny*r+i.Py*r*r)/200); } // end of generated code // usage: // set easing style for my_cb component to customEasing my_cb.setStyle(&quot;openEasing&quot;, customEasing.ease) ; // you can too adjust duration of showing and hiding in miliseconds my_cb.setStyle(&quot;openDuration&quot;, 1000);" />
<page href="ffTween.html" title="MovieClip.ffTween() , TextField.ffTween()" text="MovieClip.ffTween() , TextField.ffTween() Availability Flash Player 6. Usage my_mc.ffTween(props) Parameters props&#32;A string or array of strings indicating properties to be fast-forwarded. If the param is not passed, all tweening properties are affected. To affect colorTransform (methods colorTo, brightnessTo, colorTransformTo, invertColorTo, tintTo) use &quot;_ct_&quot; as props parameter. Returns Nothing. Description method, jumps &nbsp;props to the end of a (currently-playing) tween in any MovieClip or TextField and deletes the tween. If&nbsp;props is not passed, fast-forwards all tweens in movieclip or textfield. example: my_mc.tween([&quot;_x&quot;,&quot;_width&quot;],[200,0],10); my_mc.onPress = function() { this.ffTween(); // fast-forwards and stops all movements //this.ffTween(&quot;_x&quot;); // jumps my_mc to end _x position &amp; stops tweening _x }" />
<page href="frameTo.html" title="MovieClip.frameTo()" text="MovieClip.frameTo() Availability Flash Player 6. Usage my_mc.frameTo(frame, seconds, animtype, delay, callback, extra1, extra2) Parameters frame&#32;end frame of movieclip timeline all other parameters work as in tween() method Returns None Description shortcut method; tweens frames in timeline, my_mc in folowing example must have 20 frames // tween timeline to frame 20 in 1 second with easeoutbounce my_mc.frameTo(20,1,&quot;easeoutbounce&quot;); // tween timeline back to frame 1 in 0.5 seconds my_mc.frameTo(1,.5,&quot;linear&quot;,1)" />
<page href="getTweens.html" title="MovieClip.getTweens()" text="MovieClip.getTweens(), TextField.getTweens() Availability Flash Player 6. Usage my_mc.getTweens() Parameters none Returns Number (count) of running tweening properties Description example: my_mc.tween([&quot;_x&quot;,&quot;_y&quot;],[0,0]); trace(my_mc.getTweens()); // output 2" />
<page href="index.html" title="MovieClip Tweening Prototypes" text="MovieClip &amp; TextField Tweening Prototypes This extension adds tweening methods to MovieClip After #include &quot;lmc_tween.as&quot; for ActionScript 2.0 (runs fine on Flash Player 6) or #include &quot;lmc_tween_as1.as&quot; for ActionScript 1.0 you can use following methods for every MovieClip: You can also all the following methods except frameTo() to any TextField. MovieClip.tween() MovieClip.stopTween() MovieClip.isTweening() MovieClip.getTweens() MovieClip.lockTween() MovieClip.unlockTween() MovieClip.isTweenLocked() MovieClip.alphaTo() MovieClip.brightnessTo() MovieClip.brightOffsetTo() MovieClip.colorTo() MovieClip.colorTransformTo() MovieClip.contrastTo() MovieClip.frameTo() MovieClip.scaleTo() MovieClip.slideTo() MovieClip.rotateTo() New Methods: * MovieClip.pauseTween() MovieClip.unpauseTween() MovieClip.isTweenPaused() MovieClip.stopAllTweens() MovieClip.pauseAllTweens() MovieClip.unpauseAllTweens() MovieClip.ffTween() MovieClip.rewTween() MovieClip.invertColorTo() MovieClip.tintTo() Additional Notes: If you plan to use this prototypes in your own class, to extend MovieClip class and prevent from compile time errors, you must manully replace the file &quot;MovieClip.as&quot; in your Flash MX 2004\[language]\First Run\Classes directory with file in this location: WinXP: C:\Documents and Settings\[username]\Local Settings\Application Data\Macromedia\Flash MX 2004\[language]\Configuration\Shared\Zigo Win9X: C:\Windows\Application Data\Macromedia\Flash MX 2004\[language]\Configuration\Shared\Zigo Mac: HD:Users:[username]:Library:Application Support:Macromedia Flash MX 2004:[language]:Configuration:Shared:Zigo Additional Info: Homepage http://laco.wz.cz/tween/ Main discussion thread of this extension &nbsp;http://laco.wz.cz/forum/viewforum.php?f=1 Original idea by Zeh Fernando http://proto.layer51.com/d.aspx?f=804 Easing Equations (c) 2003 Robert Penner, all rights reserved. This work is subject to the terms in http://www.robertpenner.com/easing_terms_of_use.html. Author: Ladislav Zigo, feel free to contact me *new methods by Moses Gunesch, author of the &nbsp;Fuse kit (a simple way to build tween &amp; function-call sequences)." />
<page href="invertColorTo.html" title="MovieClip.invertColorTo() , TextField.invertColorTo()" text="MovieClip.invertColorTo() , TextField.invertColorTo() Availability Flash Player 6. Usage my_mc.invertColorTo(percent, seconds, animtype, delay, callback, extra1, extra2) Parameters percent A number that represents the percentage amount that a movieclip or textfield's colors are inverted Returns Nothing. Description Method, inverts the colors of a movieclip or textfield to create a photo-negative effect Following example inverts the colors of my_mc by 100% in 2 seconds with easeOutSine effect my_mc.invertColorTo(100,2,&quot;easeOutSine&quot;);" />
<page href="isTweening.html" title="MovieClip.isTweening()" text="MovieClip.isTweening() , TextField.isTweening() Availability Flash Player 6. Usage my_mc.isTweening() Parameters none Returns Boolean value indicating that movieclip is tweening Description use this method if you will check if your movieclip or textfield is being tweened example: my_mc.tween([&quot;_y&quot;,&quot;_alpha&quot;],[0,100],5); _root.onMouseDown = function(){ if(my_mc.isTweening()){ my_mc.stopTween(); trace(&quot;my_mc was tweened and now is stoped&quot;); } }" />
<page href="isTweenLocked.html" title="MovieClip.isTweenLocked()" text="MovieClip.isTweenLocked() , TextField.isTweenLocked() Availability Flash Player 6. Usage my_mc.isTweenLocked() Parameters none Returns Bolean value indicating if movieclip or textfield can perform tweens Description example: trace(my_mc.isTweenLocked()); // false my_mc.lockTween();trace(my_mc.isTweenLocked()); // truemy_mc.unlockTween(); trace(my_mc.isTweenLocked()); // false" />
<page href="isTweenPaused.html" title="MovieClip.isTweenPaused() , TextField.isTweenPaused()" text="MovieClip.isTweenPaused() , TextField.isTweenPaused() Availability Flash Player 6. Usage my_mc.isTweenPaused() Returns Nothing. Description method, check whether all runing and delayed tweens are paused within an individual MovieClip or TextField example: my_mc.tween([&quot;_x&quot;,&quot;_width&quot;],[200,0],10); my_mc.onMouseDown = function(){ this.pauseTween(); // pauses all movements } my_mc.onMouseUp = function(){ this.unpauseTween(); // unpauses all movements } if (my_mc.isTweenPaused() == true) { // do something }" />
<page href="lockTween.html" title="MovieClip.lockTween()" text="MovieClip.lockTween() , TextField.lockTween() Availability Flash Player 6. Usage my_mc.lockTween() Parameters none Returns nothing Description method, disallows performing tweens with movieclip or textfield (useful with buttons) to unlock use .unlockTween() method following calling of tween method do not perform nothing, because my_mc is locked : my_mc.lockTween(); my_mc.tween([&quot;_x&quot;,&quot;_y&quot;],[0,0]);" />
<page href="pauseAllTweens.html" title="MovieClip.pauseAllTweens() , TextField.pauseAllTweens()" text="MovieClip.pauseAllTweens() , TextField.pauseAllTweens() Availability Flash Player 6. Usage my_mc.pauseAllTweens() Returns Nothing. Description method, pauses all runing and delayed tweens globally from any MovieClip or TextField example: my_mc1.tween([&quot;_x&quot;,&quot;_width&quot;],[200,0],10); my_mc2.tween([&quot;_y&quot;,&quot;_height&quot;],[600,10],5); my_txt.scaleTo(40,1); my_txt.pauseAllTweens(); // pauses tweens in my_mc1, my_mc2, and my_txt" />
<page href="pauseTween.html" title="MovieClip.pauseTween() , TextField.pauseTween()" text="MovieClip.pauseTween() , TextField.pauseTween() Availability Flash Player 6. Usage my_mc.pauseTween(props) Parameters props&#32;A string or array of strings indicating properties to be paused. If the param is not passed, all tweening properties are affected. To affect colorTransform (methods colorTo, brightnessTo, colorTransformTo, invertColorTo, tintTo) use &quot;_ct_&quot; as props parameter. Returns Nothing. Description method, pauses&nbsp;props of a (currently-playing) tween within an individual MovieClip or TextField. If&nbsp;props is not passed, pauses all tweens the movieclip or textfield. example: my_mc.tween([&quot;_x&quot;,&quot;_width&quot;],[200,0],10); my_mc.onPress = function() { this.pauseTween(); // pauses all movements //this.pauseTween(&quot;_x&quot;); // pauses just _x tween }" />
<page href="rewTween.html" title="MovieClip.rewTween() , TextField.rewTween()" text="MovieClip.rewTween() , TextField.rewTween() Availability Flash Player 6. Usage my_mc.rewTween(props) Parameters props&#32;A string or array of strings indicating properties to be rewound. If the param is not passed, all tweening properties are affected. To affect colorTransform (methods colorTo, brightnessTo, colorTransformTo, invertColorTo, tintTo) use &quot;_ct_&quot; as props parameter. Returns Nothing. Description method, jumps &nbsp;props to the beginning of a (currently-playing) tween in any MovieClip or TextField and restarts the tween. If&nbsp;props is not passed, rewinds all tweens in movieclip or textfield. tween(s) are unpaused automatically if they were paused. example: my_mc.tween([&quot;_x&quot;,&quot;_width&quot;],[200,0],10); my_mc.onPress = function() { this.rewTween(); // rewinds all movements //this.rewTween(&quot;_x&quot;); // jumps _x back to start position &amp; replays it }" />
<page href="rotateTo.html" title="MovieClip.rotateTo()" text="MovieClip.rotateTo() , TextField.rotateTo() Availability Flash Player 6. Usage my_mc.rotateTo(rotation, seconds, animtype, delay, callback, extra1, extra2) Parameters rotation&#32;A number , end value of movieclip _rotation property all other parameters do the same as in tween() method Returns Nothing. Description Shortcut method, following commands are identical: my_mc.rotateTo(180,3,&quot;easeoutback&quot;); my_mc.tween(&quot;_rotation&quot;,180,3,&quot;easeoutback&quot;);" />
<page href="scaleTo.html" title="MovieClip.scaleTo()" text="MovieClip.scaleTo() , TextField.scaleTo() Availability Flash Player 6. Usage my_mc.scaleTo(size, seconds, animtype, delay, callback, extra1, extra2) Parameters size&#32;A number as _xscale and _yscale all other parameters do the same as in tween() method Returns Nothing. Description Shortcut method, following commands are identical (scaling my_mc to 50 % in 0.5 seconds): my_mc.scaleto(50,0.5);my_mc.tween([&quot;_xscale&quot;,&quot;_yscale&quot;],[50,50],0.5);" />
<page href="slideTo.html" title="MovieClip.slideTo()" text="MovieClip.slideTo() , TextField.slideTo() Availability Flash Player 6. Usage my_mc.slideTo(x,y, seconds, animtype, delay, callback, extra1, extra2); Parameters x, y &#32;numbers specifing end _x and _y properties of movieclip or textfield all other parameters do the same as in tween() method Returns Nothing. Description Shortcut method, following commands are identical: my_mc.slideTo(_root._xmouse, _root._ymouse);my_mc.tween([&quot;_x&quot;,&quot;_y&quot;],[_root._xmouse, _root._ymouse]);" />
<page href="stopAllTweens.html" title="MovieClip.pauseAllTweens() , TextField.pauseAllTweens()" text="MovieClip.stopAllTweens() , TextField.stopAllTweens() Availability Flash Player 6. Usage my_mc.stopAllTweens() Returns Nothing. Description method, stops all runing and delayed tweens globally from any MovieClip or TextField example: my_mc1.tween([&quot;_x&quot;,&quot;_width&quot;],[200,0],10); my_mc2.tween([&quot;_y&quot;,&quot;_height&quot;],[600,10],5); my_txt.scaleTo(40,1); my_txt.stopAllTweens(); // stops tweens in my_mc1, my_mc2, and my_txt" />
<page href="stopTween.html" title="MovieClip.stopTween()" text="MovieClip.stopTween() , TextField.stopTween() Availability Flash Player 6. Usage my_mc.stopTween(props) Parameters props&#32;A string or array of strings indicating properties to be stopped. If the param is not passed, all tweening properties are affected. To affect colorTransform (methods colorTo, brightnessTo, colorTransformTo, invertColorTo, tintTo) use &quot;_ct_&quot; as props parameter. Returns Nothing. Description method, stops tweening of &nbsp;props. If&nbsp;props is not passed, stops all tweens in movieclip or textfield. example: my_mc.tween([&quot;_x&quot;,&quot;_width&quot;],[200,0],10); my_mc.onMouseDown = function(){ this.stopTween(&quot;_x&quot;); // stops _x movement //this.stopTween(); // stops all movements }" />
<page href="tintTo.html" title="MovieClip.tintTo() , TextField.tintTo()" text="MovieClip.tintTo() , TextField.tintColorTo() Availability Flash Player 6. Usage my_mc.tintTo(rgb, percent, seconds, animtype, delay, callback, extra1, extra2) Parameters color A number that represents the RGB numeric value for the color (tint), may be too null or undefined - it resets color mode to normal without any color transformation percent A number that represents the percentage amount that a movieclip or textfield's colors are inverted Returns Nothing. Description Following example changes tint of my_mc to red (0xFF0000) by 50% in 2.5 seconds with easeOutSine effect my_mc.tintTo(0xFF0000,50,2.5,&quot;easeOutSine&quot;);" />
<page href="tween.html" title="MovieClip.tween()" text="MovieClip.tween(), TextField.tween() Availability Flash Player 6. Usage my_mc.tween(property, pEnd, seconds, animType, delay, callback, extra1, extra2) Parameters property property(ies) to be tweened (string, array of strings) pEnd end property value(s) (number, array of numbers, string, array of strings) Note: string properties are relative to the MovieClip or TextField's start value. For example: entering the string '20' for the MovieClip._x property will tween the MovieClip 20 pixels past its curent x position, while entering '-20' will tween the MovieClip 20 pixels less than its current x position. seconds seconds to reach the end value, /duration of tween/ (number) defaults to 2 animType animation equation type (string, function or object from custom easing tool) defaults to &quot;easeOutExpo&quot; string as animType You can use following strings as types of animation (easing equations by Robert Penner) &quot;linear&quot;, &quot;easeInQuad&quot;,&quot;easeOutQuad&quot;,&quot;easeInOutQuad&quot;,&quot;easeOutInQuad&quot; &quot;easeInCubic&quot;,&quot;easeOutCubic&quot;,&quot;easeInOutCubic&quot;,&quot;easeOutInCubic&quot; &quot;easeInQuart&quot;,&quot;easeOutQuart&quot;,&quot;easeInOutQuart&quot;,&quot;easeOutInQuart&quot; &quot;easeInQuint&quot;,&quot;easeOutQuint&quot;,&quot;easeInOutQuint&quot;,&quot;easeOutInQuint&quot; &quot;easeInSine&quot;,&quot;easeOutSine&quot;,&quot;easeInOutSine&quot;,&quot;easeOutInSine&quot; &quot;easeInExpo&quot;,&quot;easeOutExpo&quot;,&quot;easeInOutExpo&quot;,&quot;easeOutInExpo&quot; &quot;easeInCirc&quot;,&quot;easeOutCirc&quot;,&quot;easeInOutCirc&quot;,&quot;easeOutInCirc&quot; &quot;easeInElastic&quot;,&quot;easeOutElastic&quot;,&quot;easeInOutElastic&quot;,&quot;easeOutInElastic&quot; &quot;easeInBack&quot;,&quot;easeOutBack&quot;,&quot;easeInOutBack&quot;,&quot;easeOutInBack&quot; &quot;easeInBounce&quot;,&quot;easeOutBounce&quot;,&quot;easeInOutBounce&quot;&quot;easeOutInBounce&quot; example: my_mc.tween(&quot;_x&quot;,100,3,&quot;easeOutElastic&quot;) function as animType: you can use easing function generator from Timothee Groleau to generate your function: e.g.: waveEasing = function(t,b,c,d){ // ... code from generator }; my_mc.tween(&quot;_x&quot;,100,3,waveEasing); object as animType: you can use custom easing tool from menu window-&gt;other panels -&gt;custom easing tool object must have properties pts (list of control point),ease (function) e.g.: customEasing = {}; // ... copy and paste here generated code my_mc.tween(&quot;_x&quot;,100,3,customEasing); *this easing is bit slower than previous two methods delay delay in seconds to start animation (number) defaults to 0 this parameter allows you create cool sequential tweens: my_mc.('_x', 200,0.5); my_mc.('_x', 400,0.5,'easeoutcirc',0.5) my_mc.tween('_width', 300,1,'easeoutelastic',1); my_mc.tween('_height', 300,1,'easeoutelastic',2); my_mc.colorTo(0xFF0000,1,'easeinexpo',3); callback function to be called when finished (function or object with scope, func and args or string) function as callback function onEnd(){ trace(&quot;onEnd&quot;); } my_mc.tween(&quot;_x&quot;,100,1,&quot;linear&quot;,0,onEnd); // scope of function is my_mc._parent object as callback You can pass as callback object with properties func - function to be called when tween is finished scope - scope of function (this in called function) args - array of arguments passed to function updfunc - reference to function to be called on every update updscope - scope of update function (this object) updargs - array of arguments passed to update function startfunc - reference to function to be called on start of tween startscope - scope of start function (this object) startargs - array of arguments passed to start function * internal mechanism is: func.apply(scope,args) // on _root game={}; game.players = [&quot;john&quot;,&quot;steve&quot;]; game.showScore = function(id, score){ trace(&quot;(this==_root.game) is &quot;+(this==_root.game)); trace(this.players[id] + &quot; has &quot; + score + &quot; points&quot;); } // somewhere in nested movieclip var callback = {scope: _root.game, func: _root.game.showScore, args:[1,39]}; my_mc.tween(&quot;_x&quot;,100,1,&quot;linear&quot;,0,callback); /* or in 1 line: my_mc.tween(&quot;_x&quot;,100,1,&quot;linear&quot;,0,{scope: _root.game, func: _root.game.showScore, args:[1,39]}); */ //output after finishing tween: (this==_root.game) is true steve has 39 points string as callback callbacks can be too defined as strings my_mc.tween(&quot;_x&quot;,100,1,&quot;linear&quot;,0,'_root.gotoAndPlay(8)'); it is very problematic determine type of primitive parameters(number, string, boolean), in this case is 8 string for save type of passed argument use references: function callMe(my_obj, my_nr, my_bool) { trace(my_obj +&quot;&gt;&gt; typeof(my_obj) is &quot;+ typeof(my_obj)); trace(my_nr +&quot;&gt;&gt; typeof(my_nr) is &quot;+ typeof(my_nr)); trace(my_bool +&quot;&gt;&gt; typeof(my_bool) is &quot;+ typeof(my_bool)); } test_obj = {name: &quot;test&quot;, id: 10}; test_bool = true; test_nr = 99; my_mc.tween(&quot;_x&quot;,100,1,&quot;linear&quot;,0,'_root.callMe(test_obj,test_nr,test_bool)'); Do not add spaces between argumets extra1 optional animation parameter. means AMPLITUDE (a) when animType *elastic means OVERSHOOT AMMOUNT (s) when animType *back extra2 optional animation parameter. means PERIOD (p) when animType = *elastic Returns Nothing." />
<page href="tweenManager.html" title="tweenManager class" text="tweenManager class Main class of MovieClip Tweening prototypes, prototypes only parses arguments (and does not store any variables to MovieClip) to instance of class named $tweenManager Properties autoStop - boolean, default to false, determines if running tweens may be automatically stoped . This property is useful when you dont like to write stopTween() before tween() method call, stopTween(properties) is called automatically example: $tweenManager.autoStop = true; broadcastEvents - boolean, default to false, determines if tweening MovieClip may broadcast events (based on AsBroadcaster), useful for 1 - n relations: onTweenStart onTweenUpdate onTweenEnd example: $tweenManager.broadcastEvents = true; my_obj = {}; my_obj.onTweenStart = function(){ trace('my_obj onTweenStart'); } my_obj.onTweenUpdate = function(){ trace('my_obj onTweenUpdate'); } my_obj.onTweenEnd = function(){ trace('my_obj onTweenEnd'); } my_second_obj = {}; my_second_obj.onTweenEnd = function(){ trace('my_second_obj onTweenEnd'); } my_mc.onTweenEnd = function(){ trace('my_mc onTweenEnd') } my_mc.addListener(my_obj); my_mc.addListener(my_second_obj); my_mc.addListener(my_mc); my_mc.tween('_x',200); updateInterval: numeric value of calling update function. 0 is default - onEnterFrame; values higher than 0 are controlled with setInterval Methods: pauseAll() : pauses all runing and delayed tweens unPauseAll() : unpauses all runing and delayed tweens stopAll() : stops all running and delayed tweens example usage: _global.$tweenManager.pauseAll(); Note: these same 'global' methods can now also be accessed by calling the pauseAllTweens(), unpauseAllTweens() and stopAllTweens() shortcut methods on any MovieClip or Textfield. Tips: I some cases, when you upgrade from older version, and you having trouble to running tweens, use following technique: use (trace($tweenManager)), if you see [object Object] or [AS2 tweenManager [version nr]], and version nr is lower you have installed, that means older version of tweenManager is loaded. You must delete the precompiled class file (*.aso) in directory: WinXP: C:\Documents and Settings\[username]\Local Settings\Application Data\Macromedia\Flash MX 2004\[language]\Configuration\Classes\aso\ zigo.tweenManager.aso" />
<page href="unlockTween.html" title="MovieClip.unlockTween()" text="MovieClip.unlockTween() , TextField.unlockTween() Availability Flash Player 6. Usage my_mc.unlockTween() Parameters none Returns Nothing Description method, allows performing tweens with movieclip (for movieclips that was locked with lock) Opossite of .lockTween() method in following example is performed only the second tween command: my_mc.lockTween(); my_mc.tween([&quot;_x&quot;,&quot;_y&quot;],[0,0]); my_mc.unlockTween(); my_mc.tween(&quot;_width&quot;,300);" />
<page href="unpauseAllTweens.html" title="MovieClip.unpauseAllTweens() , TextField.unpauseAllTweens()" text="MovieClip.unpauseAllTweens() , TextField.unpauseAllTweens() Availability Flash Player 6. Usage my_mc.unpauseAllTweens() Returns Nothing. Description method, unpauses all runing and delayed tweens globally from any MovieClip or TextField example: my_mc1.tween([&quot;_x&quot;,&quot;_width&quot;],[200,0],10); my_mc2.tween([&quot;_y&quot;,&quot;_height&quot;],[600,10],5); my_txt.scaleTo(40,1); my_mc1.onRollOver = function() { this.pauseAllTweens(); // pauses tweens in my_mc1, my_mc2, and my_txt } my_mc1.onRollOut = function() { this.unpauseAllTweens(); // unpauses tweens in my_mc1, my_mc2, and my_txt }" />
<page href="unpauseTween.html" title="MovieClip.unpauseTween() , TextField.unpauseTween()" text="MovieClip.unpauseTween() , TextField.unpauseTween() Availability Flash Player 6. Usage my_mc.unpauseTween(props) Parameters props&#32;A string or array of strings indicating properties to be unpaused. If the param is not passed, all tweening properties are affected. To affect colorTransform (methods colorTo, brightnessTo, colorTransformTo, invertColorTo, tintTo) use &quot;_ct_&quot; as props parameter. Returns Nothing. Description method, unpauses&nbsp;props of a (currently-paused) tween within an individual MovieClip or TextField. If&nbsp;props is not passed, unpauses all paused tweens the movieclip or textfield. example: my_mc.tween([&quot;_x&quot;,&quot;_width&quot;],[200,0],10); my_mc.pauseTween(); // pauses _x and _width tweens in my_mc my_mc.onPress = function() { this.unpauseTween(); // unpauses all movements //this.pauseTween(&quot;_x&quot;); // unpauses just _x tween }" />
</book>