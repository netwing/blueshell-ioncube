<?php

// Example of custom configuration files
// If you want to override any configuration
// rewrite only what you want to change and put in $config

// *********************
// *** CONFIGURATION ***
// *********************

// Config debug and trace level FOR WEBAPP
$yii_debug = false;
$yii_trace_level = 0;

// Config debug and trace level FOR CONSOLE
$yiic_debug = true;
$yiic_trace_level = 0;

// ***************************
// *** COSTANTS DEFINITION ***
// ***************************

// Application timezone
define('APPLICATION_TIMEZONE', 'Europe/London');
// Company name
define("APPLICATION_COMPANY_NAME", "Company name");
// Company email
define("APPLICATION_COMPANY_EMAIL", "info@example.com");
// License Key
define("APPLICATION_LICENSE_KEY", "");
// Base url
define("APPLICATION_BASE_URL", "");
// VAT Percentage to use
define("VAT_PERCENTAGE", 22);
// Default currency
define("APPLICATION_CURRENCY", "EUR");
// Show map or not
define("APPLICATION_SHOW_MAP", true);

// Database connection
// This user must be created on MySQL 
// and granted all privileges on database
define('DB_HOST', "localhost"); // Set this to NULL to disable database connection
define('DB_DATABASE_NAME', "database");
define('DB_USERNAME', "username");
define('DB_PASSWORD', "password");
define('DB_TABLE_PREFIX', "blue_");
define('DB_EMULATE_PREPARE', true);
define('DB_CHARSET', "utf8");
define('DB_ENABLE_PARAM_LOGGING', true);
define('DB_ENABLE_PROFILING', true);

// LOG rotation
// Define how much big a log file can become before rotate
define('LOG_MAX_FILE_SIZE', 20480);
// Define how much rotated log files you want to keep
define('LOG_MAX_LOG_FILES', 10);
// Enable/Disable specific log routes
define('LOG_ERROR_ENABLED', true);
define('LOG_APPLICATION_ENABLED', false);
define('LOG_QUERY_ENABLED', false);
define('LOG_DEBUG_ENABLED', false);
define('LOG_TOOLBAR_ENABLED', false);

// Email sending parameters
define("EMAIL_SMTP_SERVER", 'mail.example.com');
define("EMAIL_SMTP_PORT", 25);
define("EMAIL_SMTP_USERNAME", 'username@example.com');
define("EMAIL_SMTP_PASSWORD", 'password');

// REDIS Key-Value caching engine 
// You need a running Redis server on host and port
// you also need to know which database ID use
define('REDIS_HOST', null); // Set this to NULL to disable redis connection
define('REDIS_PORT', 6379);
define('REDIS_DATABASE', 1);
define('REDIS_KEY_PREFIX', 'BLUESHELL:');

// Node.js socket.io configuration
// URL of node server at which the browser must connect
define("NODE_SERVER", null);
// Port of node server at which the browser must connect
define("NODE_PORT", null);

// APPLICATION settings
define("APPLICATION_ALARM_EMAIL", "info@netwing.it");
// Username:password for root login (Superadministrator without limit) set to null to disable
define("APPLICATION_ROOT_LOGIN", "root:root");

// Application parameters
$application_parameters = array(
    // This is for access the docs from app
    'docs.blueshell.it' => array(
        'username'  => 'blueshell',
        'password'  => 'blueshell',
    ),
    // General app parameters
    'invoice_corner_ribbon'         => true,
    'order_corner_ribbon'           => true,
    'invoice_proforma'              => true,
    'invoice_edit_number'           => true,
    'invoice_deposit_before_row'    => true,
    'map_presence_colors'           => array(
        'default'                   => "#fff",
        'arrival'                   => "#f00",
        'departure'                 => "#0f0",
        'presence'                  => "#00f",
        'arrival+departure'         => "#ff0",
    ),
    'modules' => array(
        'metodo' => array(
            // Set to load hooks.php file inside module
            'hooks' => true,
            // Database connection
            'sqlsrv' => array(
                'class'                 => 'CDbConnection',
                'connectionString'      => 'odbc:Driver=FreeTDS; Server=ipaddress-or-servername\CONNECTIONNAME; Database=DATABASENAME; UID=USERNAME; PWD=PASSWORD;',
                'emulatePrepare'        => true,
                'charset'               => 'utf8',
                'tablePrefix'           => "x_",
                'enableParamLogging'    => true,
                'enableProfiling'       => true,
                'initSQLs'              => array(
                    'SET ANSI_WARNINGS OFF',
                    'SET ANSI_NULLS ON',
                    'USE DEMO_METODO',
                ),
                // 'schemaCacheID'         => 'cache',
                'schemaCachingDuration' =>  1,
            ),
            // Admin database connection
            'sqlsrvsa' => array(
                'class'                 => 'CDbConnection',
                'connectionString'      => 'odbc:Driver=FreeTDS; Server=ipaddress-or-servername\CONNECTIONNAME; Database=DATABASENAME; UID=USERNAME; PWD=PASSWORD;',
                'emulatePrepare'        => true,
                'charset'               => 'utf8',
                'tablePrefix'           => "x_",
                'enableParamLogging'    => true,
                'enableProfiling'       => true,
                'initSQLs'              => array(
                    'SET ANSI_WARNINGS OFF',
                    'SET ANSI_NULLS ON',
                    'USE DEMO_METODO',
                ),
                // 'schemaCacheID'         => 'cache',
                'schemaCachingDuration' =>  1,
            ),
            // PARAMS
            'params' => array(
                // Database username for read/write operations
                'database_username' => 'USERNAME',
            )
        ),
    ),
);
